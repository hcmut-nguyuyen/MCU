/*
 * uart_communication.c
 *
 *  Created on: Dec 21, 2023
 *      Author: Nguyuyen
 */

#include "uart_communication.h"
#include "command_parser.h"
#include "timer.h"

#define MAX_BUFFER_SIZE 30
uint8_t temp = 0;
uint8_t buffer[MAX_BUFFER_SIZE];
uint8_t index_buffer = 0;

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
  if(huart->Instance == USART2) {
    //HAL_UART_Transmit(&huart2, &temp, 1, 50);
    //buffer[index_buffer++] = temp;
    ++index_buffer;
    if(index_buffer == 30)
      index_buffer = 0;
    buffer[index_buffer] = temp;
    buffer_flag = 1;
    HAL_UART_Receive_IT(&huart2, &temp, 1);
  }
}

UARTCommunicationState uart_communication_state = UART_INIT;

void uart_communication_fsm(){
  ADC_value = HAL_ADC_GetValue(&hadc1);
  switch (uart_communication_state) {
    case UART_INIT:
      if (command_flag == 1) {
	command_flag = 0;
	if (command_data == COMMAND_RST) {
	  uart_communication_state = UART_RESPONSE;
	  timer_flag[1] = 1;
	  ADC_value_out = ADC_value;
	}
      } else {

      }
      break;
    case UART_RESPONSE:
      if (command_flag == 1 && command_data == COMMAND_OK) {
	command_flag = 0;
	uart_communication_state = UART_STOP;
      } else {
	if (timer_flag[1] == 1) {
	  setTimer(1, RESPONSE_CYCLE);
	  HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "!ADC=%d#\r\n", ADC_value), 1000);
	}
      }
      break;
    case UART_STOP:
      uart_communication_state = UART_INIT;
      break;
    default:
      break;
  }
}
